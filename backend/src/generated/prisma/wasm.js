
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password_hash: 'password_hash',
  created_at: 'created_at'
};

exports.Prisma.MealScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  description: 'description',
  created_at: 'created_at'
};

exports.Prisma.MealIgredientScalarFieldEnum = {
  meal_id: 'meal_id',
  ingredient_id: 'ingredient_id',
  quantity: 'quantity',
  unit: 'unit'
};

exports.Prisma.IngredientScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.MealPlanScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  meal_id: 'meal_id',
  date: 'date',
  meal_type: 'meal_type'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Meal: 'Meal',
  MealIgredient: 'MealIgredient',
  Ingredient: 'Ingredient',
  MealPlan: 'MealPlan'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/kamilaplug/Documents/projekty/projekty-full/meal-planner-full/backend/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/kamilaplug/Documents/projekty/projekty-full/meal-planner-full/backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id            Int        @id @default(autoincrement())\n  username      String     @unique\n  password_hash String\n  created_at    DateTime   @default(now())\n  meals         Meal[]\n  meal_plans    MealPlan[]\n}\n\nmodel Meal {\n  id          Int      @id @default(autoincrement())\n  user        User     @relation(fields: [user_id], references: [id])\n  user_id     Int\n  name        String\n  description String?\n  created_at  DateTime @default(now())\n\n  ingredients MealIgredient[]\n  meal_plans  MealPlan[]\n}\n\nmodel MealIgredient {\n  meal_id       Int\n  meal          Meal       @relation(fields: [meal_id], references: [id])\n  ingredient_id Int\n  ingredient    Ingredient @relation(fields: [ingredient_id], references: [id])\n  quantity      Float?\n  unit          String?\n\n  @@id([meal_id, ingredient_id]) // Klucz złożony\n}\n\nmodel Ingredient {\n  id   Int    @id @default(autoincrement())\n  name String\n\n  meals MealIgredient[]\n}\n\nmodel MealPlan {\n  id        Int      @id @default(autoincrement())\n  user_id   Int\n  user      User     @relation(fields: [user_id], references: [id])\n  meal_id   Int\n  meal      Meal     @relation(fields: [meal_id], references: [id])\n  date      DateTime @db.Date // Typ Date w PostgreSQL\n  meal_type String\n}\n",
  "inlineSchemaHash": "c54d42421a00a9a92fe618404f8a5dbf1b69897e9074fad5b7514b74262f27d3",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"meals\",\"kind\":\"object\",\"type\":\"Meal\",\"relationName\":\"MealToUser\"},{\"name\":\"meal_plans\",\"kind\":\"object\",\"type\":\"MealPlan\",\"relationName\":\"MealPlanToUser\"}],\"dbName\":null},\"Meal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MealToUser\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ingredients\",\"kind\":\"object\",\"type\":\"MealIgredient\",\"relationName\":\"MealToMealIgredient\"},{\"name\":\"meal_plans\",\"kind\":\"object\",\"type\":\"MealPlan\",\"relationName\":\"MealToMealPlan\"}],\"dbName\":null},\"MealIgredient\":{\"fields\":[{\"name\":\"meal_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"meal\",\"kind\":\"object\",\"type\":\"Meal\",\"relationName\":\"MealToMealIgredient\"},{\"name\":\"ingredient_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ingredient\",\"kind\":\"object\",\"type\":\"Ingredient\",\"relationName\":\"IngredientToMealIgredient\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Ingredient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meals\",\"kind\":\"object\",\"type\":\"MealIgredient\",\"relationName\":\"IngredientToMealIgredient\"}],\"dbName\":null},\"MealPlan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MealPlanToUser\"},{\"name\":\"meal_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"meal\",\"kind\":\"object\",\"type\":\"Meal\",\"relationName\":\"MealToMealPlan\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"meal_type\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

